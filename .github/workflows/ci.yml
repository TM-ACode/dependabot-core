name: Specs
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - "main"
  pull_request:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      suites: ${{ steps.suites.outputs.suites }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .github/ci-filters.yml

      - name: Generate suites to run
        id: suites
        run: |
          # Write the changes.json file which is an array of paths
          echo "${{ toJson(steps.changes.outputs.changes) }}" > changes.json
          cat changes.json

          # Read ci-matrix.json, filtering out paths not in changes.json
          jq -c --argjson changes "$(cat changes.json)" '[.[] | select(.path as $p | $changes | index($p))]' .github/ci-matrix.json > filtered.json
          cat suites.json

          # Set the step output
          echo "suites=$(cat suites.json)" >> $GITHUB_OUTPUT

  ci:
    runs-on: ubuntu-latest
    needs: discover
    if: steps.suites.outputs.suites != '[]'
    strategy:
      fail-fast: false
      matrix:
        suite: ${{ fromJson(needs.discover.outputs.suites) }}

    steps:
      - name: Build ecosystem image
        if: steps.changes.outputs[matrix.suite.path] == 'true'
        run: script/build ${{ matrix.suite.path }}

      - name: Run ${{ matrix.suite.name }} tests
        if: steps.changes.outputs[matrix.suite.path] == 'true'
        run: |
          docker run \
            --pull never \
            --env "CI=true" \
            --env "RAISE_ON_WARNINGS=true" \
            --env "DEPENDABOT_TEST_ACCESS_TOKEN=${{ secrets.GITHUB_TOKEN }}" \
            --env "SUITE_NAME=${{ matrix.suite.name }}" \
            --rm ghcr.io/dependabot/dependabot-updater-${{ matrix.suite.ecosystem }} bash -c \
            "cd /home/dependabot/${{ matrix.suite.path }} && ./script/ci-test"

  updater:
    env:
      DOCKER_BUILDKIT: 1
    name: Updater
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      # using bundler as the test updater
      - name: Build ecosystem image
        run: script/build bundler
      - name: Run updater tests
        env:
          DEPENDABOT_TEST_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: script/ci-test-updater

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: updater/Gemfile
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: ./bin/lint
      # yamllint is installed in GitHub Actions base runner image: https://github.com/adrienverge/yamllint/pull/588
      - run: yamllint .
